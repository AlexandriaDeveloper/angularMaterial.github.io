{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/layout/nav/nav.component.ts","./src/app/shared/layout/nav/nav.component.html","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { ToastrService } from \"ngx-toastr\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent implements OnInit {\n  ngOnInit(): void {\n    this.showSuccess();\n  }\n  title = \"SPA\";\n  constructor(private toastr: ToastrService) {}\n  showSuccess() {\n    this.toastr.success(\"Hello world!\", \"Toastr fun!\");\n  }\n}\n","<app-nav>\n  <button mat-raised-button color=\"accent\">ClickMe</button>\n</app-nav>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { SharedModule } from \"./shared/shared.module\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component } from \"@angular/core\";\nimport { BreakpointObserver, Breakpoints } from \"@angular/cdk/layout\";\nimport { Observable } from \"rxjs\";\nimport { map, shareReplay } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-nav\",\n  templateUrl: \"./nav.component.html\",\n  styleUrls: [\"./nav.component.scss\"]\n})\nexport class NavComponent {\n  isHandset$: Observable<boolean> = this.breakpointObserver\n    .observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav\n    #drawer\n    position=\"end\"\n    class=\"sidenav\"\n    fixedInViewport=\"false\"\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\"\n    color=\"primary\"\n  >\n    <mat-toolbar position=\"end\" color=\"primary\">Menu </mat-toolbar>\n\n    <mat-nav-list fxFlex fxLayout=\"row\">\n      <a mat-list-item href=\"google.com\">Link 1</a>\n\n      <a mat-list-item href=\"#\">Link 2</a>\n      <a mat-list-item href=\"#\">Link 3</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <span>SPA<i class=\"fab fa-angellist\"></i></span>\n      <div class=\"spacer\"></div>\n\n      <div class=\"toolbar-items\">\n        <a mat-button> Test 1 <i class=\"fab fa-angellist fa-lg\"></i></a>\n        <a mat-button> Test 2</a>\n        <a mat-button> Test 3</a>\n        <a mat-button> Test 4</a>\n      </div>\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n    </mat-toolbar>\n    <ng-content></ng-content>\n    <!-- Add Content Here -->\n    <div class=\"container\">\n      test\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ToastrModule } from \"ngx-toastr\";\nimport { MatSliderModule } from \"@angular/material/slider\";\nimport { NavComponent } from \"./layout/nav/nav.component\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSidenavModule } from \"@angular/material/sidenav\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatListModule } from \"@angular/material/list\";\n\n@NgModule({\n  declarations: [NavComponent],\n  imports: [\n    CommonModule,\n    NgbModule,\n    ToastrModule.forRoot({\n      timeOut: 1000,\n      positionClass: \"toast-bottom-right\",\n      preventDuplicates: true\n    }),\n    MatSliderModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule\n  ],\n  exports: [\n    NgbModule,\n    ToastrModule,\n    MatSliderModule,\n    NavComponent,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule\n  ]\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}